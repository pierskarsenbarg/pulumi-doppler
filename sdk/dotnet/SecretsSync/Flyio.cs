// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Doppler.SecretsSync
{
    /// <summary>
    /// Manage a Fly.io Doppler sync.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Doppler = Pulumiverse.Doppler;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var prod = new Doppler.Integration.Flyio("prod", new()
    ///     {
    ///         Name = "TF Fly.io",
    ///         ApiKey = "fo1_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    ///     });
    /// 
    ///     var backendProd = new Doppler.SecretsSync.Flyio("backend_prod", new()
    ///     {
    ///         Integration = prod.Id,
    ///         Project = "backend",
    ///         Config = "prd",
    ///         AppId = "my-app",
    ///         RestartMachines = true,
    ///         DeleteBehavior = "leave_in_target",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DopplerResourceType("doppler:secretsSync/flyio:Flyio")]
    public partial class Flyio : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The app ID
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Output("config")]
        public Output<string> Config { get; private set; } = null!;

        /// <summary>
        /// The behavior to be performed on the secrets in the sync target when this resource is deleted or recreated. Either `leave_in_target` (default) or `delete_from_target`.
        /// </summary>
        [Output("deleteBehavior")]
        public Output<string?> DeleteBehavior { get; private set; } = null!;

        /// <summary>
        /// The slug of the integration to use for this sync
        /// </summary>
        [Output("integration")]
        public Output<string> Integration { get; private set; } = null!;

        /// <summary>
        /// The name of the Doppler project
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Whether or not to restart the Fly.io machines when secrets are updated
        /// </summary>
        [Output("restartMachines")]
        public Output<bool> RestartMachines { get; private set; } = null!;


        /// <summary>
        /// Create a Flyio resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Flyio(string name, FlyioArgs args, CustomResourceOptions? options = null)
            : base("doppler:secretsSync/flyio:Flyio", name, args ?? new FlyioArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Flyio(string name, Input<string> id, FlyioState? state = null, CustomResourceOptions? options = null)
            : base("doppler:secretsSync/flyio:Flyio", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Flyio resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Flyio Get(string name, Input<string> id, FlyioState? state = null, CustomResourceOptions? options = null)
        {
            return new Flyio(name, id, state, options);
        }
    }

    public sealed class FlyioArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app ID
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Input("config", required: true)]
        public Input<string> Config { get; set; } = null!;

        /// <summary>
        /// The behavior to be performed on the secrets in the sync target when this resource is deleted or recreated. Either `leave_in_target` (default) or `delete_from_target`.
        /// </summary>
        [Input("deleteBehavior")]
        public Input<string>? DeleteBehavior { get; set; }

        /// <summary>
        /// The slug of the integration to use for this sync
        /// </summary>
        [Input("integration", required: true)]
        public Input<string> Integration { get; set; } = null!;

        /// <summary>
        /// The name of the Doppler project
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Whether or not to restart the Fly.io machines when secrets are updated
        /// </summary>
        [Input("restartMachines", required: true)]
        public Input<bool> RestartMachines { get; set; } = null!;

        public FlyioArgs()
        {
        }
        public static new FlyioArgs Empty => new FlyioArgs();
    }

    public sealed class FlyioState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app ID
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// The behavior to be performed on the secrets in the sync target when this resource is deleted or recreated. Either `leave_in_target` (default) or `delete_from_target`.
        /// </summary>
        [Input("deleteBehavior")]
        public Input<string>? DeleteBehavior { get; set; }

        /// <summary>
        /// The slug of the integration to use for this sync
        /// </summary>
        [Input("integration")]
        public Input<string>? Integration { get; set; }

        /// <summary>
        /// The name of the Doppler project
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Whether or not to restart the Fly.io machines when secrets are updated
        /// </summary>
        [Input("restartMachines")]
        public Input<bool>? RestartMachines { get; set; }

        public FlyioState()
        {
        }
        public static new FlyioState Empty => new FlyioState();
    }
}
