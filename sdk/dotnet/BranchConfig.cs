// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Doppler
{
    /// <summary>
    /// Manage a Doppler config.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Doppler = Pulumiverse.Doppler;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var backendCiGithub = new Doppler.BranchConfig("backend_ci_github", new()
    ///     {
    ///         Project = "backend",
    ///         Environment = "ci",
    ///         Name = "ci_github",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Resource ID Format
    /// 
    /// Resource IDs are in the format `&lt;project-name&gt;.&lt;environment-slug&gt;.&lt;config-name&gt;`.
    /// </summary>
    [DopplerResourceType("doppler:index/branchConfig:BranchConfig")]
    public partial class BranchConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Doppler environment where the config is located
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Doppler project where the config is located
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a BranchConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BranchConfig(string name, BranchConfigArgs args, CustomResourceOptions? options = null)
            : base("doppler:index/branchConfig:BranchConfig", name, args ?? new BranchConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BranchConfig(string name, Input<string> id, BranchConfigState? state = null, CustomResourceOptions? options = null)
            : base("doppler:index/branchConfig:BranchConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "doppler:index/config:Config" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BranchConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BranchConfig Get(string name, Input<string> id, BranchConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new BranchConfig(name, id, state, options);
        }
    }

    public sealed class BranchConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Doppler environment where the config is located
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Doppler project where the config is located
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public BranchConfigArgs()
        {
        }
        public static new BranchConfigArgs Empty => new BranchConfigArgs();
    }

    public sealed class BranchConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Doppler environment where the config is located
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// The name of the Doppler config
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Doppler project where the config is located
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public BranchConfigState()
        {
        }
        public static new BranchConfigState Empty => new BranchConfigState();
    }
}
