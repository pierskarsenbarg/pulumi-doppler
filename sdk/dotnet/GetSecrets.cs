// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Doppler
{
    public static class GetSecrets
    {
        /// <summary>
        /// Retrieve all secrets in the config.
        /// </summary>
        public static Task<GetSecretsResult> InvokeAsync(GetSecretsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretsResult>("doppler:index/getSecrets:getSecrets", args ?? new GetSecretsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve all secrets in the config.
        /// </summary>
        public static Output<GetSecretsResult> Invoke(GetSecretsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretsResult>("doppler:index/getSecrets:getSecrets", args ?? new GetSecretsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Doppler config (required for personal tokens)
        /// </summary>
        [Input("config")]
        public string? Config { get; set; }

        /// <summary>
        /// The name of the Doppler project (required for personal tokens)
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetSecretsArgs()
        {
        }
        public static new GetSecretsArgs Empty => new GetSecretsArgs();
    }

    public sealed class GetSecretsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Doppler config (required for personal tokens)
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// The name of the Doppler project (required for personal tokens)
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetSecretsInvokeArgs()
        {
        }
        public static new GetSecretsInvokeArgs Empty => new GetSecretsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretsResult
    {
        /// <summary>
        /// The name of the Doppler config (required for personal tokens)
        /// </summary>
        public readonly string? Config;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A mapping of secret names to computed secret values
        /// </summary>
        public readonly ImmutableDictionary<string, string> Map;
        /// <summary>
        /// The name of the Doppler project (required for personal tokens)
        /// </summary>
        public readonly string? Project;

        [OutputConstructor]
        private GetSecretsResult(
            string? config,

            string id,

            ImmutableDictionary<string, string> map,

            string? project)
        {
            Config = config;
            Id = id;
            Map = map;
            Project = project;
        }
    }
}
